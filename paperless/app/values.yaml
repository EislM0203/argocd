#
# IMPORTANT NOTE
#
# This chart inherits from our common library chart. You can check the default values/options here:
# https://github.com/bjw-s/helm-charts/blob/a081de5/charts/library/common/values.yaml
#

image:
  # -- Image repository
  repository: ghcr.io/paperless-ngx/paperless-ngx
  # -- Image pull policy
  pullPolicy: IfNotPresent
  # -- Image tag
  tag: 2.16.3

# -- Environment variables [[ref]](https://docs.paperless-ngx.com/configuration/)
# @default -- See [values.yaml](./values.yaml)
env:
  # -- Set the container timezone
  TZ: "Europe/Vienna"
  #PAPERLESS_OCR_PAGES: 1
  #PAPERLESS_TASK_WORKERS: 2
  #PAPERLESS_THREADS_PER_WORKER: 1
  PAPERLESS_OCR_SKIP_ARCHIVE_FILE: "with_text"
  PAPERLESS_WEBSERVER_WORKERS: 1
  PAPERLESS_OCR_LANGUAGES: "deu+eng"
  PAPERLESS_URL: "https://paperless.local.traunseenet.com"
  PAPERLESS_APPS: "allauth.socialaccount.providers.openid_connect"
  PAPERLESS_SOCIALACCOUNT_ALLOW_SIGNUPS: false
  PAPERLESS_DISABLE_REGULAR_LOGIN: true
  # SSO documentation: https://docs.paperless-ngx.com/advanced_usage/#openid-connect-and-social-authentication
envFrom:
  - secretRef:
      name: paperless-server-secret
service:
  # -- Configures service settings for the chart.
  # @default -- See [values.yaml](./values.yaml)
  main:
    ports:
      http:
        port: 8000

ingress:
  # -- Enable and configure ingress settings for the chart under this key.
  # @default -- See [values.yaml](./values.yaml)
  main:
    enabled: false
    annotations:
      nginx.ingress.kubernetes.io/proxy-body-size: 64m
    # hosts:
    #   - host: chart-example.local
    #     paths:
    #       - path: /
    # tls:
    #   - secretName: chart-example.local
    #     hosts:
    #       - chart-example.local

persistence:
  # -- Configure data volume settings for the chart under this key.
  # @default -- See [values.yaml](./values.yaml)
  data:
    enabled: true
    existingClaim: "paperless-ngx-data"
    #storageClass: "longhorn-storage"
    #accessMode: ReadWriteOnce
    #size: 1Gi
  # -- Configure media volume settings for the chart under this key.
  # @default -- See [values.yaml](./values.yaml)
  media:
    enabled: true
    existingClaim: "paperless-ngx-media"
  # -- Configure export volume settings for the chart under this key.
  # @default -- See [values.yaml](./values.yaml)
  export:
    enabled: true
    existingClaim: "paperless-ngx-export"
    #storageClass: "longhorn-storage"
    #accessMode: ReadWriteOnce
    #size: 1Gi
  # -- Configure consume volume settings for the chart under this key.
  # @default -- See [values.yaml](./values.yaml)
  consume:
    enabled: true
    existingClaim: "paperless-ngx-consume"
    #storageClass: "longhorn-storage"
    #accessMode: ReadWriteOnce
    #size: 4Gi

# -- Enable and configure postgresql database subchart under this key.
#    If enabled, the app's db envs will be set for you.
#    [[ref]](https://github.com/bitnami/charts/tree/main/bitnami/postgresql)
# @default -- See [values.yaml](./values.yaml)
postgresql:
  enabled: true
  auth:
    existingSecret: "paperless-ngx-postgresql"
    secretKeys:
      adminPasswordKey: "postgres-password"
      userPasswordKey: "postgres-password"
  primary:
    persistence:
      enabled: true
      existingClaim: "data-paperless-ngx-postgresql-0"
      #storageClass: "longhorn-storage"
      #size: 8Gi

# -- Enable and configure redis subchart under this key.
#    If enabled, the app's Redis env will be set for you.
#    [[ref]](https://github.com/bitnami/charts/tree/main/bitnami/redis)
# @default -- See [values.yaml](./values.yaml)
redis:
  enabled: true
  image:
    repository: bitnami/redis
    tag: 7.2.4-debian-12-r12
    pullPolicy: IfNotPresent
  auth:
    enabled: true
    existingSecret: "paperless-ngx-redis"
    existingSecretPasswordKey: "redis-password"
    username: ""
    # Use an existing secret for redis auth. Do this if you're using Argo to manage your instance or otherwise using helm template under the hood
    #     The secret name can vary, but the password key must be redis-password.
    # existingSecret: paperless-redis
    # existingSecretPasswordKey: redis-password
  master:
    nodeSelector:
        kubernetes.io/arch: arm64
    persistence:
      enabled: false
    resources:
      requests:
        cpu: 100m
        memory: 256Mi
  replica:
    replicaCount: 0
